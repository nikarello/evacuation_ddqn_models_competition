import pandas as pd
from scipy.stats import mannwhitneyu
from pathlib import Path

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
FOLDERS = {
    'base': Path('–º–µ—Ç—Ä–∏–∫–∏ 1000/–¥–µ—Ñ–æ–ª—Ç'),
    'fix': Path('–º–µ—Ç—Ä–∏–∫–∏ 1000/—Ñ–∏–∫—Å —Å–ø–∞–≤–Ω–∞ –æ–≥–Ω—è'),
}
ALGORITHMS = [
    "DuelingDDQN",
    "DuelingDDQNPrioritized",
    "NoisyDuelingDDQN",
    "QRDQN"
]
TOTAL_AGENTS = 1200
N_LAST = 100

print("=== üî• H1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∏—è–Ω–∏—è –∑–∞–ø—Ä–µ—Ç–∞ —Å–ø–∞–≤–Ω–∞ –æ–≥–Ω—è —É –≤—ã—Ö–æ–¥–∞ ===")

for algo in ALGORITHMS:
    try:
        df_base = pd.read_csv(FOLDERS['base'] / f"metrics_{algo}.csv")
        df_fix = pd.read_csv(FOLDERS['fix'] / f"metrics_{algo}.csv")
    except FileNotFoundError:
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è {algo}")
        continue

    # –í—ã—á–∏—Å–ª—è–µ–º evacuated_ratio –≤—Ä—É—á–Ω—É—é
    base_vals = df_base["evacuated"].iloc[-N_LAST:] / TOTAL_AGENTS * 100
    fix_vals = df_fix["evacuated"].iloc[-N_LAST:] / TOTAL_AGENTS * 100

    stat, p = mannwhitneyu(base_vals, fix_vals, alternative="two-sided")
    delta = fix_vals.mean() - base_vals.mean()

    print(f"{algo}: p = {p:.5f} ‚úÖ | Œîmean = {delta:.2f} %")
